@model BlogSystem.Web.ViewModels.Post.PostViewModel

@using BlogSystem.Web.ViewModels.Comment

@{
    ViewBag.Title = Model.Title;

    const string commentsPartialViewsFolder = "~/Views/Comments/{0}.cshtml";
}

<article class="post-container">
    <header class="post-header">
        <h2 class="post-title">
            @Html.DisplayFor(model => Model.Title)
        </h2>
        <ul class="post-meta">
            <li>
                <i class="fa fa-clock-o" aria-hidden="true"></i>
                @Html.DisplayFor(model => Model.CreatedOn)
            </li>
            <li>
                <i class="fa fa-user" aria-hidden="true"></i>
                @Html.DisplayFor(model => Model.Author)
            </li>
        </ul>
    </header>
    <div class="post-content">
        @Html.DisplayFor(model => Model.Content)
    </div>
    <div class="post-comments">
        @(Ajax.ActionLink("View Comments", "All", new { id = Model.Id, controller = "Comments" },
            new AjaxOptions
            {
                HttpMethod = "GET",
                OnSuccess = "BlogSystem.onGetCommentsSuccess",
                InsertionMode = InsertionMode.Replace,
                UpdateTargetId = "comments"
            }, new { id = "show-comments-btn", @class = "btn btn-default" }))

        <section id="comments"></section>

        <section id="new-comment" class="hidden">
            @Html.Partial(string.Format(commentsPartialViewsFolder, "_CreateComment"), new CommentViewModel())
        </section>
    </div>
</article>

@section Scripts {
    @Scripts.Render("~/bundles/notify")
}